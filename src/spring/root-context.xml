<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:context="http://www.springframework.org/schema/context" 
   xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd">
 

 	<bean id="loginService" class="com.qrs.springmvc.service.impl.LoginServiceImpl">
 	</bean>
 	
 	<!-- 数据源 -->
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass">
      <value>${dataSource.driverClass}</value>
    </property>
    <property name="jdbcUrl">
      <value>${dataSource.jdbcUrl}</value>
    </property>
    <property name="user">
      <value>${dataSource.user}</value>
    </property>
    <property name="password">
      <value>${dataSource.password}</value>
    </property>
    <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
    <property name="acquireIncrement">
      <value>${dataSource.acquireIncrement}</value>
    </property>
    <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
    <property name="initialPoolSize">
      <value>${dataSource.initialPoolSize}</value>
    </property>
    <!--连接池中保留的最大连接数。Default: 15 -->
    <property name="maxPoolSize">
      <value>${dataSource.maxPoolSize}</value>
    </property>
    <!--连接池中保留的最小连接数。 -->
    <property name="minPoolSize">
      <value>${dataSource.minPoolSize}</value>
    </property>
  </bean>
  
  <!-- MyBatis -->
  <bean id="mybatisSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="mapperLocations"
			value="classpath:com/qrs/springmvc/dao/*Mapper.xml"></property>
  </bean>
  
  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
  
  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="mybatisSessionFactory" />
		<constructor-arg index="1" value="BATCH" />
	</bean>
  
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.qrs.springmvc.dao" />
    <property name="sqlSessionFactoryBeanName" value="mybatisSessionFactory" />
  </bean>
  
	  <!--   
	      用途1：Spring的xml配置文件中，可以通过${属性名}使用properties文件配置的值  
	      用途2：可以使用@Value("${属性名}")注解读取properties文件配置的值，再给字段赋值  
	             方法1：注解在字段上，给字段赋值  
	             方法2：注解在字段的setter方法中赋值             
	-->  
	<bean id="propertyConfigurer"  
	      class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
	      <property name="location">  
	          <value>classpath:/props/config.properties</value>  
	      </property>  
	</bean> 
  	
  	
  	
  	<import resource="classpath:spring/spring-dao.xml"/>
  
</beans>